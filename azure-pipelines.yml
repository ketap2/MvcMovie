trigger:
  - main

pool:
  name: "MyLocalAgent" # Use your self-hosted agent pool name

variables:
  buildConfiguration: "Release"
  webAppName: "MovieApp"
  projectPath: "**/*.csproj"

stages:
  - stage: Build
    displayName: "Build Stage"
    jobs:
      - job: Build
        displayName: "Build Job"
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: "sdk"
              version: "8.0.x"

          - task: DotNetCoreCLI@2
            displayName: "Restore project dependencies"
            inputs:
              command: "restore"
              projects: "$(projectPath)"

          - task: DotNetCoreCLI@2
            displayName: "Build the project"
            inputs:
              command: "build"
              projects: "$(projectPath)"
              arguments: "--configuration $(buildConfiguration)"

          - task: DotNetCoreCLI@2
            displayName: "Publish the project"
            inputs:
              command: "publish"
              projects: "$(projectPath)"
              publishWebProjects: true
              arguments: "--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)"
              zipAfterPublish: true

          - task: PublishPipelineArtifact@1
            displayName: "Publish artifacts"
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)"
              artifact: "MovieApp"

  - stage: Deploy
    displayName: "Deploy Stage"
    dependsOn: Build
    jobs:
      - deployment: DeployMovieApp
        displayName: "Deploy Movie App"
        environment: "Development" # The environment name you created
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: "current"
                    artifactName: "MovieApp"
                    targetPath: "$(Pipeline.Workspace)/MovieApp"

                - task: IISWebAppManagementOnMachineGroup@0
                  displayName: "Configure IIS Website"
                  inputs:
                    IISDeploymentType: "IISWebsite"
                    ActionIISWebsite: "CreateOrUpdateWebsite"
                    WebsiteName: "$(webAppName)"
                    WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot\$(webAppName)'
                    WebsitePhysicalPathAuth: "WebsiteUserPassThrough"
                    AddBinding: true
                    Bindings: '{"bindings":[{"protocol":"http","ipAddress":"*","port":"80","hostname":"","sslThumbprint":"","sniFlag":false}]}'
                    CreateOrUpdateAppPoolForWebsite: true
                    AppPoolNameForWebsite: "$(webAppName)AppPool"
                    DotNetVersionForWebsite: "No Managed Code"

                - task: IISWebAppDeploymentOnMachineGroup@0
                  displayName: "Deploy to IIS Website"
                  inputs:
                    WebSiteName: "$(webAppName)"
                    Package: "$(Pipeline.Workspace)/MovieApp/**/*.zip"
                    TakeAppOfflineFlag: true
